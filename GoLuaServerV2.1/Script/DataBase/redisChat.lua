---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by soonyo.zhengxh
--- DateTime: 2019/12/2 9:28
---

--------------------------------------------------------------------------------------
--- 这里主要提供几个接口函数用来维护两个Hash列表
--- 1.NickName<===>UserID[玩家昵称<=>UserID]的对应关系[主要可以用来:1.判定用户名是否存在;2.加好友通过昵称搜索用户]
--- 2.GameID<===>UserID[GameID<=>UserID]的对应关系[主要可以用来:加好友通过GameID搜索用户]
--------------------------------------------------------------------------------------

--- 判定玩家昵称与UserID对应关系是否存在
--- @param nickName 昵称
--- @param 0、1
function RedisChatNickNameKeyExist(nickName)
    if nickName == nil or type(nickName) ~= "string" or nickName == "" then
        Logger("RedisChatNickNameKeyExist 昵称错误")
        return 0
    end
    return RedisExistKey(RedisDirNickFindUserID, nickName)
end

--- 搜索玩家昵称对应的UserID信息
--- @param nickName 玩家昵称
--- @return 玩家UserID
function RedisChatFindUserIDByNickName(nickName)
    if nickName == nil or type(nickName) ~= "string" or nickName == "" then
        Logger("RedisChatFindUserIDByNickName 昵称错误")
        return nil
    end
    return tonumber(RedisGetString(RedisDirNickFindUserID, nickName))
end

--- 写入一条玩家NickName<===>UserID对应关系
--- @param nickName 玩家昵称
--- @param userID   用户ID
function RedisChatSaveNickNameToUserID(nickName, userID)
    if nickName == nil or type(nickName) ~= "string" or nickName == "" then
        Logger("RedisChatSaveNickNameToUserID 昵称 错误")
        return
    end
    if userID == nil or type(userID) ~= "number" or userID == 0 then
        Logger("RedisChatSaveNickNameToUserID userID 错误")
        return
    end
    RedisSaveString(RedisDirNickFindUserID, nickName, userID)
end
--------------------------------------------------------------------------------------

--- 判定玩家GameID与UserID对应关系是否存在
--- @param gameID 玩家gameID
--- @param 0、1
function RedisChatGameIDKeyExist(gameID)
    if gameID == nil or type(gameID) ~= "number" or gameID == 0 then
        Logger("RedisChatGameIDKeyExist GameID错误")
        return 0
    end
    return RedisExistKey(RedisDirGameIDFindUserID, gameID)
end

--- 搜索玩家GameID对应的UserID信息
--- @param gameID 玩家昵称
--- @return 玩家UserID
function RedisChatFindUserIDByGameID(gameID)
    if gameID == nil or type(gameID) ~= "number" or gameID == 0 then
        Logger("RedisChatFindUserIDByGameID GameID错误")
        return nil
    end
    return tonumber(RedisGetString(RedisDirGameIDFindUserID, gameID))
end

--- 写入一条玩家gameID<===>UserID对应关系
--- @param gameID   玩家GameID
--- @param userID   用户ID
function RedisChatSaveGameIDToUserID(gameID, userID)
    if gameID == nil or type(gameID) ~= "number" or gameID == 0 then
        Logger("RedisChatSaveNickNameToUserID userID 错误")
        return 0
    end
    if userID == nil or type(userID) ~= "number" or userID == 0 then
        Logger("RedisChatSaveNickNameToUserID userID 错误")
        return 0
    end
    RedisSaveString(RedisDirGameIDFindUserID, gameID, userID)
end