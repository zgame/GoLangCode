syntax = "proto3";
package GameSandRock;


//-------------------------------------用户信息---------------------------
message _user{
	uint32 userId = 1;          //用户ID
	string openId = 2;          //渠道sdkID
	string nickName = 3;          //昵称
	uint32 level = 4;            //用户等级
	uint32 exp = 5;              //
	uint32 faceId = 6;              //
	uint32 gender = 7;              //
	uint32 roomId = 8;          //房间ID
	uint32 chairId = 9;          //位置ID
	uint32 hp = 10;
	uint32 hpMax = 11;
	uint32 sp = 12;
	uint32 spMax = 13;
}

//---------------------------------------登录-------------------------------
//游戏服务器登录申请,  客户端登录最快的方式是发userId，  其次是openId，  最后是machineId ,  注意如果发送了machineId，那么openId会被忽略
message GameLogin{
	string machineId = 1;              //机器序列
	string openId = 2;              //  渠道id
	uint32 userId = 3;              //用户 I D
	string password = 4;              //登录密码(32md5)
	string ipAddr = 5;              //IP地址
	uint32 channel = 6;            //渠道号 1为官网
	string deviceType = 7;            //设备的型号
	uint32 gameId = 8;            //登录游戏编号 , 必须发
}

// 登录成功
message GameLoginResult{
	bool success = 1;     // 1成功，0失败
	_user user = 2;        //用户信息
	string err = 3;
}

// 登出
message GameLogout{
	uint32 userId = 1;
}
// 登出结果
message GameLogoutResult{
	bool success = 1;     // 1成功，0失败
}
// 游戏的信息同步
message GameInfo{
	uint32 npcList = 1;
}

//其他玩家进入游戏场景
message UserList{
	repeated _user user = 1;        //用户信息
}
// 其他玩家离开游戏
message OtherLeaveRoom{
	uint32 userId = 1;
}

//---------------------------------------同步位置-------------------------------
message _location{
	uint32 userId = 1;
	float x = 2;
	float y = 3;
	float z = 4;
	float faceDir = 5 ;     // 面对方向
	uint64 action = 6 ;     //玩家当前行为
	int32  param = 7  ;     //行为的参数
	uint32 item = 8 ;       // 手持道具
}
//位置信息同步
message PlayerLocation{
	repeated _location location = 1;
	uint64 time = 2; //时间戳
}

//---------------------------------------玩家信息编辑-----------------------------
message PlayerInfo{
	uint32 userId = 1;              //用户 I D
	string nickName = 2;          // 修改昵称
	uint32 gender = 3;            //性别

}

//---------------------------------------睡觉-------------------------------
message Sleep{
	uint32 userId = 1;
}


//---------------------------------------拾取类资源刷新和采集----------------------------------
message _resourcePoint{
	string areaName =1;   // 区域的名字
	uint32 areaPoint =2;  // 区域中第几个point
	uint32 resourceType= 3;  // 生成了什么东西
}
message ResourceUpdate{
	repeated _resourcePoint points=1;   //刷新点列表
	uint32 weather =2;          // 天气变化
}
message ResourceGet{
	_resourcePoint info = 1;    // 资源点采集
}

//---------------------------------------树木和石头资源刷新和采集----------------------------------
message _resourceTerrain{
	string areaName =1;   // 区域的名字
	uint32 areaPoint =2;  // 区域中第几个point
	uint32 resourceType= 3;  // 生成了什么东西  TrunkHealth,StumpHealth
	uint32 trunkHealth= 4;  // TrunkHealth
	uint32 stumpHealth= 5;  // StumpHealth
}
message ResourceTerrainUpdate{
	repeated _resourceTerrain points=1;   //刷新点列表
}
message ResourceTerrainGet{
	_resourceTerrain info = 1;    // 资源点采集
	uint32 toolId = 2;            // 使用工具的id , 如果工具id是0， 说明是徒手的
	uint32 damage = 3;            // 伤害
}

//----------------------------------------道具----------------------------------------------
message _item{
	uint32 itemId = 1;
	int32 itemNum = 2;          // 道具数量为负就是减少
	int32 itemNumTotal = 3;          // 道具总数量，用来同步
}
message ItemGet{
	repeated _item item = 1;
	uint32 level = 2;           // 等级是否变动
	uint32 exp = 3;           // 经验是否增加
	uint32 sp = 4;            // sp是否变化
}
//----------------------------------------机器组装 和 道具合成 回收 烹饪----------------------------------------------
message CreationMachine{
	uint32 createId = 1;         // 要组装什么机器
}
message CreationItem{
	uint32 createId = 1;        // 合成什么道具
}
message CreationItemExperiment{
	uint32 createId = 1;        //  实验台，先不管
}
message CreationRecycle{
	uint32 createId = 1;        // 回收什么道具
}
message CreationCooking{
	uint32 createId = 1;        // 烹饪什么
	uint32 MaterialsID = 2;        // 烹饪的材料
}
