---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/6 16:54
---

--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------
--- 这是每个玩家的连接接收到网络消息之后的处理， 当涉及到多人游戏的时候， 需要通过MultiThreadChannelGameManagerToPlayer 来和游戏桌子逻辑进行数据交互，因为多线程需要保证线程安全
---
--- 如果自己单人游戏就不用了， 直接把处理游戏的逻辑写在这里就好了。
--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------



--local CMD_GameServer_pb = require("CMD_GameServer_pb")
--local CMD_Game_pb = require("CMD_Game_pb")

--MyPlayer = nil -- 这是全局的玩家句柄，因为每一个LState是一个单独的lua空间，所以每个玩家都拥有自己单独的MyPlayer句柄


----客户端申请进入大厅 , 玩家申请登录游戏房间， 分配桌子，坐下
function SevEnterScene(userId, buf)
    --print("------------客户端申请进入大厅-------------")
    local msg = CMD_GameServer_pb.CMD_GF_GameOption()
    msg:ParseFromString(buf)

    --玩家登陆游戏，分配桌子
    local gameType = GameTypeXHS     -- 申请登录的游戏类型
    -- 创建一个User对象
    local MyUser = User:New()
    ---- 以后增加判断，先读数据库，如果没有，创建新的玩家，如果有，读数据库
    LoadUserInfoFromSQLServer(userId, MyUser)
    -- 没有找到初始化
    if MyUser.UserID ~= userId then
        MyUser.UserID = userId
        MyUser.FaceId = 0
        MyUser.Gender = 0
        MyUser.GameId = 320395999
        MyUser.Exp = 254
        MyUser.Loveliness = 0
        MyUser.Score = 100000009
        MyUser.NickName = "玩家"..MyUser.UserID
        MyUser.Level = 1
        MyUser.VipLevel = 0
        MyUser.AccountLevel = 3
        MyUser.CurLevelExp = 0
        MyUser.NextLevelExp = 457
        MyUser.PayTotal = 0
        MyUser.Diamond = 29
        MyUser.PuzzleIDArray = {0, 0, 0, 0, 0, 0, 0, 0, 0}
    end

    local oldPlayer = Player:New(MyUser)
    oldPlayer.GameType = gameType
    -- 找到对应游戏
    local game = GetGameByID(gameType)
    if game == nil then
        LuaNetWorkSendToUser(userId,MDM_GR_LOGON, SUB_GR_LOGON_FAILURE, nil, "请求登录游戏类型不正确", nil)
        return
    end
    -- 进入对应游戏桌子
    local player = game:PlayerLoginGame(oldPlayer)
    local table = game:GetTableByUID(player.TableID)
    if table == nil then
        LuaNetWorkSendToUser(userId, MDM_GR_LOGON, SUB_GR_LOGON_FAILURE, nil, "没找到正确的桌子", nil)
        return
    end

    -- 发送游戏状态
    local sendGameState = CMD_GameServer_pb.CMD_GF_GameStatus()
    sendGameState.game_status = 100
    sendGameState.allow_lookon = 0
    LuaNetWorkSendToUser(userId,MDM_GF_FRAME, SUB_GF_GAME_STATUS, sendCmd, nil, nil) --发送游戏状态

    --发送场景其他数据信息
    table:SendTableSceneInfo(player)
end


