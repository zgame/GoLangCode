---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhushiwei.
--- DateTime: 2020/11/26 14:44
---


MongoEngine = require('mongodb')
--MongoEngineConnect = MongoEngine.new()
--- 创建数据库句柄
function MongoDBNew()
    return MongoEngine.new()
end

-- Mongo数据库连接
function MyMongoConnect(handle, h, d, u, ps)
    local ok, err = handle:connect({ host = h, database = d, user = u, password = ps })

    if ok then
        print(" Mongo  数据库 ok!")
        --local user = {}
        --user["ss"] = 22
        --user["name"] = 'ss'
        --user["ss2"] = "223"
        --MongoInsert("people",user)


        --local user2 = {}
        --user2["name"] = 'ss'
        --local ss = MongoFinds("people",user2,"-key")
        --printTable(ss)
    end

    return ok, err

end



-- 执行find语句
function MongoFind(collection, table, handle)
    if handle == nil then
        handle = MongoMainEngineConnect
    end
    local table = handle:find(collection, table)
    return table
end

-- 执行finds语句  查询多条记录  sort里面是列名 负的表示从高到低排序
function MongoFinds(collection, table, sort, handle)
    if handle == nil then
        handle = MongoMainEngineConnect
    end
    if sort == nil then
        sort = "-1"
    end

    local table = handle:finds(collection, table, sort)
    return table
end

-- 执行insert语句
function MongoInsert(collection, table, handle)
    if handle == nil then
        handle = MongoMainEngineConnect
    end
    local err = handle:insert(collection, table)
    if err ~= nil then
        Logger(err)
    end
    return err
end


-- 执行del语句
function MongoDel(collection, table, handle)
    if handle == nil then
        handle = MongoMainEngineConnect
    end
    local err = handle:del(collection, table)
    if err ~= nil then
        Logger(err)
    end
    return err
end


-- 执行update语句  selectTable为条件  updateTable为更新的内容
function MongoUpdate(collection, selectTable, updateTable, handle)
    if handle == nil then
        handle = MongoMainEngineConnect
    end
    local err = handle:update(collection, selectTable, updateTable)
    if err ~= nil then
        Logger(err)
    end
    return err
end

