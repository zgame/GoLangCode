---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by soonyo.
--- DateTime: 2019/10/29 11:14
---这里放通用的关于string的接口

---------------将字符串以某个自定的标记，拆分成字符串数组---------------
---@param sBaseString 待拆分的字符串
---@param sSpeString 拆分字符串的标记
---@param tContString 被拆开的字符串数组。注意调用的时候必须在外面用table接受函数返回值！
function SplitString(sBaseString,sSpeString,tContString)
    tContString = {};
    --sBaseString = string.format("%s%s",sBaseString,"SplitStringEnd")
    --sBaseString = string.gsub(sBaseString,)
    local dwStartPos = 1;
    local dwNextPos = 1;
    local dwSubEndPos = 1;
    --local sSubString = "";
    local nLength = string.len(sBaseString);
    local nSpeLength = string.len(sSpeString);
    --print("SplitString:sBaseString="..sBaseString..",sSpeString="..sSpeString..",nLength="..nLength..",nSpeLength="..nSpeLength)
    --如果标记位为空字符串，则返回sBaseString
    if nSpeLength < 1  then
        table.insert(tContString,sBaseString);
        return tContString;
    end
    --如果基础字符串长度小于等于1，分情况返回{}or{sBaseString}
    if nLength <= dwStartPos and string.find(sBaseString,sSpeString,1,true)  then---sBaseString=sSpeString
    return tContString;
    elseif nLength <= dwStartPos and not string.find(sBaseString,sSpeString,1,true)  then---sBaseString~=sSpeString
    table.insert(tContString,sBaseString);
        return tContString;
    end
    while (dwStartPos < nLength) do
        dwNextPos,dwSubEndPos = string.find(sBaseString,sSpeString,dwStartPos,true);
        --print("dwNextPos="..(dwNextPos or 0),"dwSubEndPos="..(dwSubEndPos or 0));
        if dwNextPos == nil then
            table.insert(tContString,string.sub(sBaseString,dwStartPos));
            dwStartPos = nLength;
        elseif dwNextPos > dwStartPos then
            local sSubContString = string.sub(sBaseString,dwStartPos,dwNextPos - 1);
            --print("sSubContString="..sSubContString)
            table.insert(tContString,sSubContString);
            dwStartPos = dwNextPos + nSpeLength;
        end
    end
    --printTable(tContString,0,"tContString")
    return tContString;
end