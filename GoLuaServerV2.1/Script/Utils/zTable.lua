---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/7 15:56
---

---- 获取table有多少个元素，作废了，不能用
--function GetTableLen(table)
--    local num = 0
--    for k,v in pairs(table) do
--        num = num + 1
--    end
--    return num
--end

--
--function ToStringEx(value)
--    if type(value)=='table' then
--        return TableToStr(value)
--    elseif type(value)=='string' then
--        return "\'"..value.."\'"
--    else
--        return tostring(value)
--    end
--end
--
--
---- table 转换成 string
--function TableToStr(t)
--    if t == nil then return "" end
--    local retStr = "{"
--
--    local i = 1
--    for key,value in pairs(t) do
--        local signal = ","
--        if i==1 then
--            signal = ""
--        end
--
--        if key == i then
--            retStr = retStr ..signal..ToStringEx(value)
--        else
--            if type(key)=='number' or type(key) == 'string' then
--                retStr = retStr ..signal..'['..ToStringEx(key).."]="..ToStringEx(value)
--            else
--                if type(key)=='userdata' then
--                    retStr = retStr ..signal.."*s"..TableToStr(getmetatable(key)).."*e".."="..ToStringEx(value)
--                else
--                    retStr = retStr ..signal..key.."="..ToStringEx(value)
--                end
--            end
--        end
--
--        i = i+1
--    end
--
--    retStr = retStr .."}"
--    return retStr
--end
--
--
---- string 转成 table
--function StrToTable(str)
--    if str == nil or type(str) ~= "string" then
--        return
--    end
--
--    return loadstring("return " .. str)()
--end

--- 功能: 按照正则表达式规则拆分string字符串
--- @param str 原始待拆分数字字符串
--- @param delim 分隔符
--- @param maxNb 最大拆分数量默认全部拆分
--- @param 返回string数组
function StringSplitToStringArrayBYZZ( str,reps )
    local resultStrList = {}
    string.gsub(str,'[^'..reps..']+',function ( w )
        table.insert(resultStrList,w)
    end)
    return resultStrList
end

--- 功能: 拆分string字符串
--- @param str 原始待拆分数字字符串
--- @param delim 分隔符
--- @param maxNb 最大拆分数量默认全部拆分
--- @param 返回string数组
function StringSplitToStringArray(str, delim, maxNb)
    if string.find(str, delim, 1, true) == nil then
        return { str }
    end

    if maxNb == nil or maxNb < 1 then
        maxNb = 0
    end

    local result = {}
    local pat = "(.-)" .. delim .. "()"
    local nb = 0
    local lastPos
    for part, pos in string.gmatch(str, pat) do
        nb = nb + 1
        result[nb] = part
        lastPos = pos
        if nb == maxNb then break end
    end

    if nb ~= maxNb then
        for i = nb, maxNb do
            result[nb + 1] = string.sub(str, lastPos)
        end
    end

    return result
end

--- 功能: 拆分数字字符串
--- @param str 原始待拆分数字字符串
--- @param delim 分隔符
--- @param maxNb 最大拆分数量默认全部拆分
--- @param 返回Int数组
function StringSplitToNumberArray(str, delim, maxNb)
    local result = {}
    if str == nil or string.len(str) == 0 or string.gmatch(str, delim) == nil then
        -- 拆分数量存在,则返回maxNb大小默认值为0的数组
        if maxNb then
            for i = 1, maxNb do
                result[i] = 0
            end
        end
        return result
    end

    if maxNb == nil or maxNb < 1 then
        maxNb = 0
    end

    local result = {}
    local pat = "(.-)" .. delim .. "()"
    local nb = 0
    local lastPos
    for part, pos in string.gmatch(str, pat) do
        nb = nb + 1
        result[nb] = tonumber(part)
        lastPos = pos
        if nb == maxNb then break end
    end


    if nb ~= maxNb then
        for i = nb, maxNb do
            result[i] = 0
        end
    end

    return result
end

--- 从权重数组中选择对应的索引下标
--- @param weightArray 权重数组(下标从0开始的连续数组)
--- @return 权重索引
function TableWeightSelect(weightArray)
    local nCurWeight = 0
    local nTotalWeight = 0

    for i=1, #weightArray do
        nTotalWeight = nTotalWeight + weightArray[i]
    end

    local random = GetRandom(1,nTotalWeight)
    for i=1, #weightArray do
        nCurWeight = nCurWeight + weightArray[i]
        if nCurWeight >= random then
            return i
        end
    end
    return 0
end