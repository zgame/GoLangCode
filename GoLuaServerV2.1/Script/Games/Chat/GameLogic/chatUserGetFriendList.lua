---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by soonyo.zhengxh
--- DateTime: 2019/11/28 15:39
---

--------------------------------------------------------------------------------------
--- 玩家获取好友列表、申请列表、被申请列表、未读消息
--------------------------------------------------------------------------------------

--- 玩家获取好友信息
--- @param player   玩家对象
--- @param data     消息数据
function ChatTable:HandleUserGetFriendList(player, data)
    -- 玩家判定
    if player == nil or player.ChatUser == nil then
        Logger("ChatTable:HandleUserGetFriendList 玩家不存在")
        return
    end
    -- 组装发送消息
    local SendMsg = CMD_GlobalServer_pb.CMD_S_FRIEND_LIST()
    local tbChatUser = player.ChatUser
    -- 1.申请列表
    local tbPlayer
    local tbUser
    local bOnline = false
    local applyInfo
    for i, v in ipairs(tbChatUser.ApplyFriendArray) do
        applyInfo = SendMsg.apply_list:add()
        -- 1.判定玩家是否在线
        tbPlayer = GetPlayerByUID(v)
        if tbPlayer == nil then
            -- 从Redis获取该玩家基础数据
            --tbUser = RedisGetPlayer(v)
            tbUser = self:GetUserCache(v)
        else
            tbUser = tbPlayer.User
            bOnline = true
        end
        if tbUser ~= nil then
            applyInfo.user_id           = tbUser.UserID         -- 用户ID
            applyInfo.game_id           = tbUser.GameID		    -- 游戏ID
            applyInfo.face_id           = tbUser.FaceID		    -- 头像ID
            applyInfo.vip_lev           = tbUser.VipLev		    -- vip等级
            applyInfo.nick              = tbUser.NickName		-- 昵称
            applyInfo.off_line_time     = tbUser.OffLineTime    -- 离线时间
            applyInfo.Is_on_line        = bOnline               -- 是否在线
        end
    end
    -- 2.被申请列表
    local beApplyInfo
    for i, v in ipairs(tbChatUser.BeApplyFriendArray) do
        beApplyInfo = SendMsg.be_applied_list:add()
        -- 1.判定玩家是否在线
        tbPlayer = GetPlayerByUID(v)
        if tbPlayer == nil then
            -- 从Redis获取该玩家基础数据
            --tbUser = RedisGetPlayer(v)
            tbUser = self:GetUserCache(v)
        else
            tbUser = tbPlayer.User
            bOnline = true
        end
        if tbUser ~= nil then
            beApplyInfo.user_id           = tbUser.UserID           -- 用户ID
            beApplyInfo.game_id           = tbUser.GameID		    -- 游戏ID
            beApplyInfo.face_id           = tbUser.FaceID		    -- 头像ID
            beApplyInfo.vip_lev           = tbUser.VipLev		    -- vip等级
            beApplyInfo.nick              = tbUser.NickName		    -- 昵称
            beApplyInfo.off_line_time     = tbUser.OffLineTime      -- 离线时间
            beApplyInfo.Is_on_line        = bOnline                 -- 是否在线
        end
    end
    -- 3.好友列表
    local tbFriendUnReadMessage
    local friendInfo
    for i, v in ipairs(tbChatUser.FriendArray) do
        friendInfo = SendMsg.friend_list:add()
        -- 1.判定玩家是否在线
        tbPlayer = GetPlayerByUID(v)
        if tbPlayer == nil then
            -- 从Redis获取该玩家基础数据
            --tbUser = RedisGetPlayer(v)
            tbUser = self:GetUserCache(v)
        else
            tbUser = tbPlayer.User
            bOnline = true
        end
        if tbUser ~= nil then
            friendInfo.user_info.user_id           = tbUser.UserID            -- 用户ID
            friendInfo.user_info.game_id           = tbUser.GameID		      -- 游戏ID
            friendInfo.user_info.face_id           = tbUser.FaceID		      -- 头像ID
            friendInfo.user_info.vip_lev           = tbUser.VipLev		      -- vip等级
            friendInfo.user_info.nick              = tbUser.NickName		  -- 昵称
            friendInfo.user_info.off_line_time     = tbUser.OffLineTime       -- 离线时间
            friendInfo.user_info.Is_on_line        = bOnline                  -- 是否
            friendInfo.unread_count = 0
            friendInfo.message_time = 0
            tbFriendUnReadMessage = tbChatUser.UnReadMessageArray[tostring(tbUser.UserID)]
            if tbFriendUnReadMessage ~= nil and #tbFriendUnReadMessage > 0 then
                friendInfo.unread_count = #tbFriendUnReadMessage
                friendInfo.message_time = tonumber(tbFriendUnReadMessage[friendInfo.unread_count][2]) -- 最后一个的时间作为最近未读时间
            end
        end
    end
    -- 响应客户端消息
    LuaNetWorkSendToUser(player.User.UserID, MAIN_CHAT_SERVICE_CLIENT, SUB_S_FRIEND_LIST, SendMsg)
end