---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by soonyo.zhengxh
--- DateTime: 2019/11/28 15:43
---

--------------------------------------------------------------------------------------
--- 玩家申请好友、取消申请、同意申请、拒绝申请
--------------------------------------------------------------------------------------

--- 申请好友
--- @param player           玩家对象
--- @param dwApplyUserID    申请人ID
--- @param dwBeApplyUserID  被申请人ID
--- @param 操作结果
local function ChatUserApplyFriend(player, dwApplyUserID, dwBeApplyUserID)
    -- 申请人是否是自己
    if player.User.UserID ~= dwApplyUserID then
        return Enum_ReplyResult.Failed
    end
    -- 申请列表上限限制
    if player:GetApplyFriendNum() >= ApplyFriendListNum then
        return Enum_ReplyResult.ApplyUpperLimit
    end
    -- 好友数量是否达到上限
    local dwMaxFriendNum = GetFriendMaxNumByVipLv(player.User.VipLev)
    if player:GetFriendNum() >= dwMaxFriendNum then
        return Enum_ReplyResult.FriendUpperLimit
    end
    -- 是否已经是好友
    if player:IsInFriendArray(dwBeApplyUserID) > 0 then
        return Enum_ReplyResult.FriendExisted
    end
    -- 是否已经在申请列表
    if player:IsInApplyFriendArray(dwBeApplyUserID) > 0 then
        return Enum_ReplyResult.ApplyRepeatedly
    end
    -- 被申请玩家是否在线
    local beApplyChatUser
    local beApplyUser
    local beApplyPlayer = GetPlayerByUID(dwBeApplyUserID)
    if beApplyPlayer ~= nil then
        beApplyUser     = beApplyPlayer.User
        beApplyChatUser = beApplyPlayer.ChatUser
    else
        beApplyUser = RedisGetPlayer(dwBeApplyUserID)
        -- 不在线取Redis
        beApplyChatUser = RedisGetPlayerChatInfo(dwBeApplyUserID)
    end
    if beApplyChatUser == nil then
        return Enum_ReplyResult.Failed
    end
    -- 对方好友列表是否已满
    dwMaxFriendNum = GetFriendMaxNumByVipLv(beApplyUser.VipLev)
    if #beApplyChatUser.FriendArray > dwMaxFriendNum then
        return Enum_ReplyResult.OtherFriendFull
    end
    -- 对方被申请列表是否已经满了
    if #beApplyChatUser.BeApplyFriendArray > ApplyFriendListNum then
        return Enum_ReplyResult.OtherFriendFull
    end
    -- 给玩家申请列表添加数据
    player:AddApplyFriendInfo(dwBeApplyUserID)
    -- 给对方被申请列表增加数据
    table.insert(beApplyChatUser.BeApplyFriendArray, dwApplyUserID)
    if beApplyPlayer then
        local pUser = player.User
        -- 在线通知对方
        local sendMsg = CMD_GlobalServer_pb.CMD_S_APPLY_FRIEND_RESULT()
        sendMsg.apply.apply_id      = dwApplyUserID             -- 申请人ID
        sendMsg.apply.be_applied_id = dwBeApplyUserID           -- 被申请人ID
        sendMsg.apply.opt           = Enum_ApplyOpt.Apply       -- 操作方式
        sendMsg.apply_info.user_id  = pUser.UserID              -- 用户ID
        sendMsg.apply_info.game_id  = pUser.GameID		        -- 游戏ID
        sendMsg.apply_info.face_id  = pUser.FaceID		        -- 头像ID
        sendMsg.apply_info.vip_lev  = pUser.VipLev		        -- vip等级
        sendMsg.apply_info.nick     = pUser.NickName	        -- 昵称
        LuaNetWorkSendToUser(dwBeApplyUserID, MAIN_CHAT_SERVICE_CLIENT, SUB_S_APPLY_FRIEND_RESULT, sendMsg, nil)
    else
        -- 不在线更新被申请玩家Redis
        RedisSavePlayerChatInfo(dwBeApplyUserID, beApplyChatUser)
    end
    return Enum_ReplyResult.Successful
end
--------------------------------------------------------------------------------------

--- 取消申请
--- @param player           玩家对象
--- @param dwApplyUserID    申请人ID
--- @param dwBeApplyUserID  被申请人ID
local function ChatUserCancelApplyFriend(player, dwApplyUserID, dwBeApplyUserID)
    -- 申请人验证
    if player.User.UserID ~= dwApplyUserID then
        return Enum_ReplyResult.Failed
    end
    -- 是否在玩家被申请列表
    if player:IsInApplyFriendArray(dwBeApplyUserID) == 0 then
        return Enum_ReplyResult.Failed
    end
    -- 从玩家申请列表移除
    player:DelApplyFriendInfo(dwBeApplyUserID)
    -- 找到被申请人信息
    local beApplyPlayer = GetPlayerByUID(dwBeApplyUserID)
    if beApplyPlayer then
        beApplyPlayer:DelApplyFriendInfo(dwApplyUserID)
        -- 在线通知对方
        local sendMsg = CMD_GlobalServer_pb.CMD_S_APPLY_FRIEND_RESULT()
        sendMsg.apply.apply_id      = dwApplyUserID         -- 申请人ID
        sendMsg.apply.be_applied_id = dwBeApplyUserID       -- 被申请人ID
        sendMsg.apply.opt           = Enum_ApplyOpt.Cancel  -- 操作方式
        LuaNetWorkSendToUser(dwBeApplyUserID, MAIN_CHAT_SERVICE_CLIENT, SUB_S_APPLY_FRIEND_RESULT, sendMsg, nil)
    else
        -- 不在线获取Redis
        local beApplyChatUser = RedisGetPlayerChatInfo(dwBeApplyUserID)
        local iIndex = 0
        for i, v in ipairs(beApplyChatUser.BeApplyFriendArray) do
            if v == dwApplyUserID then
                iIndex = i
                break
            end
        end
        table.remove(beApplyChatUser.BeApplyFriendArray, iIndex)
        -- 保存Redis
        RedisSavePlayerChatInfo(dwBeApplyUserID, beApplyChatUser)
    end
    return Enum_ReplyResult.Successful
end
--------------------------------------------------------------------------------------

--- 同意申请
--- @param player           玩家对象
--- @param dwApplyUserID    申请人ID
--- @param dwBeApplyUserID  被申请人ID
local function ChatUserAgreeApplyFriend(player, dwApplyUserID, dwBeApplyUserID)
    -- 被申请人验证
    if player.User.UserID ~= dwBeApplyUserID then
        return Enum_ReplyResult.Failed
    end
    -- 被申请列表验证
    if player:IsInBeApplyFriendArray(dwApplyUserID) == 0 then
        return Enum_ReplyResult.Failed
    end
    -- 好友数量验证
    local dwMaxFriendNum = GetFriendMaxNumByVipLv(player.User.VipLev)
    if player:GetFriendNum() >= dwMaxFriendNum then
        return Enum_ReplyResult.FriendUpperLimit
    end
    -- 被申请人好友数量验证
    local applyPlayer = GetPlayerByUID(dwApplyUserID)
    if applyPlayer then
        -- 申请列表验证
        if applyPlayer:IsInApplyFriendArray(dwBeApplyUserID) == 0 then
            return Enum_ReplyResult.Failed
        end
        -- 对方在线
        dwMaxFriendNum = GetFriendMaxNumByVipLv(applyPlayer.User.VipLev)
        if applyPlayer:GetFriendNum() >= dwMaxFriendNum then
            return Enum_ReplyResult.OtherFriendFull
        end
        -- 从对方申请列表移除
        applyPlayer:DelApplyFriendInfo(dwBeApplyUserID)
        -- 加入对方好友列表
        applyPlayer:AddFriendInfo(dwBeApplyUserID)
        -- 在线通知对方
        local sendMsg = CMD_GlobalServer_pb.CMD_S_APPLY_FRIEND_RESULT()
        sendMsg.apply.apply_id      = dwApplyUserID         -- 申请人ID
        sendMsg.apply.be_applied_id = dwBeApplyUserID       -- 被申请人ID
        sendMsg.apply.opt           = Enum_ApplyOpt.Agree   -- 操作方式
        LuaNetWorkSendToUser(dwApplyUserID, MAIN_CHAT_SERVICE_CLIENT, SUB_S_APPLY_FRIEND_RESULT, sendMsg, nil)
    else
        -- 对方不在线取玩家Redis数据
        local applyUser = RedisGetPlayer(dwApplyUserID)
        if applyUser.UserID ~= dwApplyUserID then
            return Enum_ReplyResult.Failed
        end
        dwMaxFriendNum = GetFriendMaxNumByVipLv(applyUser.VipLev)
        local applyChatUser = RedisGetPlayerChatInfo(dwApplyUserID)
        if #applyChatUser.FriendArray >= dwMaxFriendNum then
            return Enum_ReplyResult.OtherFriendFull
        end
        -- 从申请列表移除
        local iIndex = 0
        for i, v in ipairs(applyChatUser.ApplyFriendArray) do
            if v == dwApplyUserID then
                iIndex = i
                break
            end
        end
        if iIndex <= 0 then
            return Enum_ReplyResult.Failed
        end
        table.remove(applyChatUser.ApplyFriendArray, iIndex)
        -- 加入到好友列表
        table.insert(applyChatUser.FriendArray, dwBeApplyUserID)
        -- 保存Redis
        RedisSavePlayerChatInfo(dwApplyUserID, applyChatUser)
    end
    -- 从玩家被申请列表移除
    player:DelBeApplyFriendInfo(dwApplyUserID)
    -- 加入到玩家好友列表
    player:AddFriendInfo(dwApplyUserID)
    return Enum_ReplyResult.Successful
end
--------------------------------------------------------------------------------------

--- 拒绝申请
--- @param player           玩家对象
--- @param dwApplyUserID    申请人ID
--- @param dwBeApplyUserID  被申请人ID
local function ChatUserRefuseApplyFriend(player, dwApplyUserID, dwBeApplyUserID)
    -- 被申请人验证
    if player.User.UserID ~= dwBeApplyUserID then
        return Enum_ReplyResult.Failed
    end
    -- 被申请列表验证
    if player:IsInBeApplyFriendArray(dwApplyUserID) == 0 then
        return Enum_ReplyResult.Failed
    end
    -- 获取申请人信息
    local applyPlayer = GetPlayerByUID(dwApplyUserID)
    if applyPlayer then
        -- 在线,从申请列表移除
        applyPlayer:DelApplyFriendInfo(dwBeApplyUserID)
        -- 在线通知对方
        local sendMsg = CMD_GlobalServer_pb.CMD_S_APPLY_FRIEND_RESULT()
        sendMsg.apply.apply_id      = dwApplyUserID         -- 申请人ID
        sendMsg.apply.be_applied_id = dwBeApplyUserID       -- 被申请人ID
        sendMsg.apply.opt           = Enum_ApplyOpt.Agree   -- 操作方式
        LuaNetWorkSendToUser(dwApplyUserID, MAIN_CHAT_SERVICE_CLIENT, SUB_S_APPLY_FRIEND_RESULT, sendMsg, nil)
    else
        -- 不在线,获取玩家好友信息
        local applyChatUser = RedisGetPlayerChatInfo(dwApplyUserID)
        local iIndex = 0
        for i, v in ipairs(applyChatUser.ApplyFriendArray) do
            if v == dwApplyUserID then
                iIndex = i
                break
            end
        end
        table.remove(applyChatUser.ApplyFriendArray, iIndex)
        -- 保存Redis
        RedisSavePlayerChatInfo(dwApplyUserID, applyChatUser)
    end
    -- 从玩家被申请列表移除
    player:DelBeApplyFriendInfo(dwApplyUserID)
    return Enum_ReplyResult.Successful
end


--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--- 玩家处理申请界面信息
--- @param player   玩家对象
--- @param data     消息数据
function ChatTable:HandleUserApplyFriend(player, data)
    -- 玩家判定
    if player == nil or player.ChatUser == nil then
        Logger("ChatTable:HandleUserApplyFriend 玩家不存在")
        return
    end
    -- 解析消息
    local receiveMsg = CMD_GlobalServer_pb.CMD_C_APPLY_FRIEND()
    receiveMsg:ParseFromString(data)

    local apply = receiveMsg.apply
    -- 申请用户UserID
    local dwApplyUserID = apply.apply_id
    -- 被申请用户UserID
    local dwBeApplyUserID = apply.be_applied_id

    -- ID判定
    if dwApplyUserID == dwBeApplyUserID then
        return
    end
    -- 操作方式
    local opt = apply.opt
    local enumResult = Enum_ReplyResult.Successful
    if opt == CMD_GlobalServer_pb.APPLYOPT_APPLY_ENUM.number then
        --- 申请好友
        enumResult = ChatUserApplyFriend(player, dwApplyUserID, dwBeApplyUserID)
    elseif opt == CMD_GlobalServer_pb.APPLYOPT_CANCEL_ENUM.number then
        --- 取消申请
        enumResult = ChatUserCancelApplyFriend(player, dwApplyUserID, dwBeApplyUserID)
    elseif opt == CMD_GlobalServer_pb.APPLYOPT_AGREE_ENUM.number then
        --- 同意别人申请
        enumResult = ChatUserAgreeApplyFriend(player, dwApplyUserID, dwBeApplyUserID)
    elseif opt == CMD_GlobalServer_pb.APPLYOPT_REFUSE_ENUM.number then
        --- 拒绝别人申请
        enumResult = ChatUserRefuseApplyFriend(player, dwApplyUserID, dwBeApplyUserID)
    end

    -- 返回客户端响应消息
    local sendMsg = CMD_GlobalServer_pb.CMD_S_APPLY_FRIEND_RESULT()
    sendMsg.apply.apply_id      = dwApplyUserID         -- 申请人ID
    sendMsg.apply.be_applied_id = dwBeApplyUserID       -- 被申请人ID
    sendMsg.apply.opt           = opt                   -- 操作方式
    sendMsg.result              = enumResult
    LuaNetWorkSendToUser(player.User.UserID, MAIN_CHAT_SERVICE_CLIENT, SUB_S_APPLY_FRIEND_RESULT, sendMsg, nil)
end
--------------------------------------------------------------------------------------