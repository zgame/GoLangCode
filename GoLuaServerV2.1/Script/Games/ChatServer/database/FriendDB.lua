---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by soonyo.
--- DateTime: 2019/10/24 17:09



--- 好友相关数据库处理

--- 添加好友关系
function ChatServerLogic:OnAddFriend(DBR)
    if DBR == nil
            or DBR.userid == nil
            or DBR.fiendid == nil then
        return
    end
    local sSql = string.format("IF EXISTS(select 1 from Friends with(updlock) where UserID = %d and FriendID = %d)",
            DBR.userid, DBR.fiendid)
    sSql = sSql .. string.format("update Friends with(updlock) set status = 0 where userid = %d and friendid = %d or userid = %d and friendid = %d;",
            DBR.userid, DBR.fiendid, DBR.fiendid,DBR.userid)
    sSql = sSql .. "else "
    sSql = sSql .. string.format("INSERT into Friends(UserID, FriendID) VALUES(%d,%d),(%d,%d);",
            DBR.userid, DBR.fiendid, DBR.fiendid,DBR.userid)
    SqlServerDataBaseFriendExec(sSql)
end
---删除两个用户的关系
---@param userid number
---@param friendUserid number
function ChatServerLogic:OnDeleteFriend(userid, friendUserid)
    local sSql = string.format("update Friends with(updlock) set Status = 1 where UserID = %d and FriendID = %d; update Friends with(updlock) set Status = 1 where UserID = %d and FriendID = %d;",
            userid, friendUserid,friendUserid,userid )
    sSql = sSql .. string.format("update UnreadMessage with(updlock) set MessageCount = 0, Message = N'' where UserID = %d and FriendID = %d and MessageCount > 0;", userid, friendUserid)
    sSql = sSql .. string.format("update UnreadMessage with(updlock) set MessageCount = 0, Message = N'' where UserID = %d and FriendID = %d and MessageCount > 0;", friendUserid, userid)
    SqlServerDataBaseFriendExec(sSql)
end

--- 从数据库中查找被删除的好友数量
--- 申请时候的查询传入的 是被申请人的id opt == 1
--- 同意时候的查询传入的 是申请人的id opt == 3
---@param userid number
function ChatServerLogic:OnSearchOtherFriendCount(userid)
    local sSql = string.format("select count(FriendID) as num from Friends with(nolock) where UserID = %d and Status = 0;", userid)
    local resT = SqlServerDataBaseFriendQuery(sSql)
    return resT
end

--- 更新好友状态
--- DBR.ApplyID = nApplyID         申请人id
--- DBR.BeAppliedID = nBeAppliedID 被申请人id
--- DBR.Status = opt               做的相关操作
---@param DBR table
function ChatServerLogic:OnUpdateApplyFriendStatus(DBR)
    if DBR == nil
            or DBR.ApplyID == nil
            or DBR.BeAppliedID == nil
            or DBR.Status == nil then
        return
    end
    local sSql = string.format("IF EXISTS(select 1 from ApplyFriend with(updlock) where UserID = %d and DstUserID = %d) ",
            DBR.ApplyID, DBR.BeAppliedID)
    sSql = sSql .. string.format("update ApplyFriend with(updlock) set Status = %d where UserID = %d and DstUserID = %d",
            DBR.Status, DBR.ApplyID, DBR.BeAppliedID)
    sSql = sSql .. " else "
    sSql = sSql .. string.format("insert into ApplyFriend(UserID,DstUserID,Status) values(%d, %d, %d);",
            DBR.ApplyID, DBR.BeAppliedID, DBR.Status)
    SqlServerDataBaseFriendExec(sSql)
end



--- 加载用户申请关系
---@param dwUserID number 用户的id
function ChatServerLogic:LoadUserBeApplyInfo(dwUserID)
    local sSql = string.format("select UserID,CreateTime from ApplyFriend where DstUserID = %d and Status = 1",dwUserID);
    return SqlServerDataBaseFriendQuery(sSql)
end

--- 加载用户被申请关系
---@param dwUserID number 用户的id
function ChatServerLogic:LoadUserApplyInfo(dwUserID)
    local sSql = string.format("select DstUserID,CreateTime from ApplyFriend where UserID = %d and Status = 1",dwUserID)
    return SqlServerDataBaseFriendQuery(sSql)
end

--- 加载用户好友关系
---@param dwUserID number 用户的id
function ChatServerLogic:LoadUserFriendsInfo(dwUserID)
    local sSql = string.format("select FriendID,CreateTime from Friends where UserID = %d and Status = 0",dwUserID)
    return SqlServerDataBaseFriendQuery(sSql)
end