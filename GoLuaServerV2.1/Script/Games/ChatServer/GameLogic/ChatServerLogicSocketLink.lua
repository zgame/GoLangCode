---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by soonyo.
--- DateTime: 2019/11/5 15:26

----  网络连接管理相关处理


--- 1分钟内未标明身份信息，踢掉 不是用户 不是登录服的连接
--- 检查
function ChatServerLogic:CheckSocketLink()
    local currentTime = os.time()
    for serverid, linkInfo in pairs(self.m_LinkInfo) do
        --- 60秒内没有设置连接类型，可以判定为其他 连接
        if linkInfo.LinkKind == Enum_ChatServerLinkKind.None and (linkInfo.ActiveTime + 60 <= currentTime) then
            Logger("ChatServerFace:CheckSocketLink ========Serverid = ", serverid)
            LuaNetWorkClose(0, tonumber(serverid))
            self:OnSocketClose(serverid)
        end
    end
end


--- 连接至服务器后调用
---@param serverId number底层go维护的ServerId
function ChatServerLogic:OnSocketLink(serverId)
    local info = ChatLinkInfo:New()
    info.ServerID = serverId
    info.ActiveTime = os.time()
    --- 先设置连接信息为无
    info.LinkKind = Enum_ChatServerLinkKind.None
    self.m_LinkInfo[tostring(serverId)] = info
    --print("ChatServerFace:OnSocketLink ======== serverId=", serverId, " LinkNum", self:GetLinkNum())
end

--- 设置连接信息 登录服注册 与玩家 登录的时候要分别注册
---@param serverId number底层go维护的ServerId
function ChatServerLogic:SetSocketLinkInfo(serverId, kindtype)
    local linkInfo = self.m_LinkInfo[tostring(serverId)]
    if linkInfo ~= nil then
        linkInfo.LinkKind = kindtype
    end
    --Logger(string.format('ChatServerLogic:SetSocketLinkInfo(%d, %d)',serverId,kindtype))
    --Logger(string.format('self.m_LinkInfo[tostring(serverId)].LinkKind = %d',self.m_LinkInfo[tostring(serverId)].LinkKind))
end

---当连接关闭的时候要清除连接信息
---@param serverId number底层go维护的ServerId
function ChatServerLogic:OnSocketClose(serverId)
    local linkInfo = self.m_LinkInfo[tostring(serverId)]
    if linkInfo ~= nil then
        --- 如果是服务器断开服务器连接计数要减一
        if linkInfo.LinkKind == Enum_ChatServerLinkKind.Server then
            if self.g_iServerCount > 0 then
                self.g_iServerCount = self.g_iServerCount - 1
            else
                self.g_iServerCount = 0
            end
        end
        self.m_LinkInfo[tostring(serverId)] = nil
    end
   -- print("ChatServerFace:OnSocketClose ========Serverid = ", serverId, " LinkNum = ", self:GetLinkNum())
end

--- 获取连接数量
function ChatServerLogic:GetLinkNum()
    return GetHashTableLen(self.m_LinkInfo)
end


