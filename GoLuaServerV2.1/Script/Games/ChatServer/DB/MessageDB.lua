---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by soonyo.
--- DateTime: 2019/11/12 16:32

--- 聊天消息相关数据库操作

--- 查询用户未读的信息
---@param UserID number 用户的id
function  ChatServerLogic:LoadUserUnreadMsg(UserID)
    local sSql = string.format("select FriendID, Message from UnreadMessage where UserID = %d and MessageCount > 0 and LastUpdateTime > DATEADD(d, -%d, GETDATE())",UserID,self.m_iLoadMessageInDays)
    return SqlServerDataBaseFriendQuery(sSql)
end

--- 保存未读消息
---@param willMsg 等待写入消息的数组
function ChatServerLogic:OnSaveUnreadMessage(willMsg)
    if willMsg == nil or next(willMsg) == nil then
        return
    end

    local strT = {}
    local exestr = ''
    local num = 0
    local total = 0
    local begin = GetOsTimeMillisecond();
    
    -- 拼湊消息
    for _, willMessage in ipairs(willMsg) do
        total = total + 1
        local dwUserID = willMessage[1]
        local dwFiendID = tonumber(willMessage[2])
        local iCount = willMessage[3]
        local strMsg = willMessage[4]
        exestr = string.format('if EXISTS(select 1 from UnreadMessage with(nolock) where UserID = %d and FriendID = %d) ',
                dwUserID, dwFiendID)
        table.insert(strT, exestr)
        exestr = string.format("update UnreadMessage with(updlock) set MessageCount = %d, Message = '%s', LastUpdateTime = GETDATE() where UserID = %d and FriendID = %d  ",
                iCount, strMsg, dwUserID, dwFiendID)
        table.insert(strT, exestr)
        table.insert(strT, " else ")
        exestr = string.format("INSERT into UnreadMessage(UserID, FriendID, MessageCount, Message) VALUES(%d, %d, %d, '%s'); "
        , dwUserID, dwFiendID, iCount, strMsg)
        table.insert(strT, exestr)
        num = num + 1
        -- 10 条语句一次
        if num > 500 then
            if next(strT) ~= nil then
                local sSql = table.concat(strT, '')
                ---print("OnSaveUnreadMessage", sSql)
                SqlServerDataBaseFriendExec(sSql)
            end
            strT = {}
            num = 0
        end
    end
    local span = GetOsTimeMillisecond() - begin
    Logger(string.format( "ChatServerLogic:OnSaveUnreadMessage(willMsg)  共有 %d,执行了%d ms",total,span))
    --- 未处理完的需要处理
    if num > 0 then
        if next(strT) ~= nil then
            local sSql = table.concat(strT, '')
            ---print("OnSaveUnreadMessage", sSql)
            SqlServerDataBaseFriendExec(sSql)
        end
    end
    Logger('OnSaveUnreadMessage num= ' .. num)
    span = GetOsTimeMillisecond() - begin
    Logger(string.format( "ChatServerLogic:OnSaveUnreadMessage(willMsg)  共执行了%d  ms",span))
end


--- 消息存储
---@param Messagelist 等待写入的消息数据
function ChatServerLogic:OnChatMessageRecord(Messagelist)
    local strT = {} -- 做成一个表，方便连接
    local exestr = ''
    local num = 0  -- 需要添加的条数计数
    --printTable(Messagelist,0,"Messagelist")
    local total = 0
    local begin = GetOsTimeMillisecond();
    for _, willMessage in pairs(Messagelist) do
        total = total + 1
        local dwUserID = willMessage.UserID
        local dwFiendID = willMessage.FriendID
        local iEmotonID = willMessage.EmotionID
        local strMsg = willMessage.sOriginalContent
        if num == 0 then
            exestr = string.format("insert into Message(SpeakerID, TargetID, Message, EmotonID) VALUES(%d,%d,'%s',%d)"
            , dwUserID, dwFiendID, strMsg, iEmotonID)
        else
            exestr = string.format(",(%d,%d,'%s',%d)"
            , dwUserID, dwFiendID, strMsg, iEmotonID)
        end
        table.insert(strT, exestr)

        num = num + 1
        -- 100 条语句一次
        if num > 100 then
            if next(strT) ~= nil then
                local sSql = table.concat(strT, '')
                ---print("OnChatMessageRecord", sSql)
                SqlServerDataBaseFriendExec(sSql)
            end
            -- 重置变量
            strT = {}
            num = 0
        end
    end
    local span = GetOsTimeMillisecond() - begin
    ---Logger(string.format( "ChatServerLogic:OnChatMessageRecord(willMsg)  共有 %d,执行了%d ms",total,span))
    --- 未处理完的需要处理
    if num > 0 then
        if next(strT) ~= nil then
            local sSql = table.concat(strT, '')
            ---print("OnChatMessageRecord", sSql)
            SqlServerDataBaseFriendExec(sSql)
        end
    end
    span = GetOsTimeMillisecond() - begin
    ---Logger(string.format( "ChatServerLogic:OnChatMessageRecord(willMsg)  共执行了%d  ms",span))
end


