--- 聊天服相关定时器
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by soonyo.
--- DateTime: 2019/10/24 16:39
---

--- 初始化定时器
function ChatServerInitTimer()
    --- 设置定时器
    if IS_Debug then
        --- MODI 测试使用
        SetNewTimer('ChatLoadApplyControllerTimer', 30 * 1000)
        SetNewTimer('ChatSaveUnReadMessageTimer', 10 * 1000)
        SetNewTimer('ChatCheckUnreadMessageCacheAliveTimer', 30 * 1000)
        SetNewTimer('ChatCheckSocketLinkTimer', 60 * 1000)
        ---SetNewTimer('ChatBackUpOnlineUserTimer', 300 * 1000)
        SetNewTimer('ChatSaveMessageTimer', 5 * 1000)
        --- 查看lua的相关的定时器
        SetNewTimer('ChatCheckLuaMemery_G', 30 * 1000)
        ---SetNewTimer('ChatAutoSendApplyTimer', 5 * 1000) 屏蔽一個定時器 将两个定时器弄成一个
    else
        --- 正常程序
        SetNewTimer('ChatLoadApplyControllerTimer', 180 * 1000)
        SetNewTimer('ChatSaveUnReadMessageTimer', 300 * 1000)
        SetNewTimer('ChatCheckUnreadMessageCacheAliveTimer', 24 * 3600 * 1000)
        SetNewTimer('ChatCheckSocketLinkTimer', 60 * 1000)
        ---SetNewTimer('BackUpOnlineUserTimer', 300 * 1000)
        SetNewTimer('ChatSaveMessageTimer', 5 * 1000)
        ---SetNewTimer('ChatAutoSendApplyTimer', 5 * 1000) 屏蔽一個定時器 将两个定时器弄成一个
    end
end

--- 加载后台申请好友
function ChatLoadApplyControllerTimer()
    if ChatServerLogicInstance ~= nil then
        ChatServerLogicInstance:LoadApplyFriendController()
    end
end

---保存未读的消息
function ChatSaveUnReadMessageTimer()
    G_ChatSaveUnReadMessage()
end

---检查未读消息超時刪除內存数据
function ChatCheckUnreadMessageCacheAliveTimer()
    if  ChatServerLogicInstance.UserMgr ~= nil then
        local setOnlineUser = {}
        local onlineUserList =  ChatServerLogicInstance.UserMgr:GetOnlineUserList()
        --printTable(onlineUserList,0,"onlineUserList")
        for sUserID,_ in  pairs(onlineUserList) do
            setOnlineUser[sUserID] = true
        end
        --- 排除在线的
        if ChatServerLogicInstance.FriendMgr ~= nil  then
            ChatServerLogicInstance.FriendMgr:CheckUnreadMessageCacheAlive(setOnlineUser,FriendAndCacheTimeout)
        end

        --- 清除离了线  多余的用户信息
        ChatServerLogicInstance.UserMgr:RemoveOfflineUser()
    end
end

--- 检测socket 连接
function ChatCheckSocketLinkTimer()
    ChatServerLogicInstance:CheckSocketLink()
end

----- 保存在线用户 由于直接从redis 取数据可以占时不用保存在线数据
--function BackUpOnlineUserTimer()
--    if ChatServerLogicInstance.UserMgr ~= nil then
--    end
--end

--- 保存消息
function ChatSaveMessageTimer()
    if ChatServerLogicInstance ~= nil then
        local Messagelist = ChatServerLogicInstance.m_WillSaveMessagelist
        --local start = GetOsTimeMillisecond()
        if Messagelist ~= nil and next(Messagelist)  then
            ChatServerLogicInstance:OnChatMessageRecord(Messagelist)
        end
        --local endtime = GetOsTimeMillisecond()
        --Logger(string.format("SaveMessageTimer 耗时 %d ms", endtime - start));
        ChatServerLogicInstance.m_WillSaveMessagelist = {}
        --- 这里调用后台添加的好友申请列表数据，避免再单独创建定时器
        ChatAutoSendApplyTimer()
    end
end

